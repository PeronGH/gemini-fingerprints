import "@std/dotenv/load";
import { GoogleGenAI } from "@google/genai";
import { sha256, writeJsonProperty } from "./utils.ts";

const FINGERPRINT_FILE = "fingerprints.json";

const geminiModel = Deno.args.at(0);
if (!geminiModel) {
  throw new Error("Please provide a Gemini model name as the first argument.");
}

const GEMINI_API_KEY = Deno.env.get("GEMINI_API_KEY");
if (!GEMINI_API_KEY) {
  throw new Error("GEMINI_API_KEY environment variable is not set.");
}
const GEMINI_BASE_URL = Deno.env.get("GEMINI_BASE_URL");

const ai = new GoogleGenAI({
  apiKey: GEMINI_API_KEY,
  httpOptions: { baseUrl: GEMINI_BASE_URL },
});

const response = await ai.models.generateContent({
  model: geminiModel,
  contents: "Generate a random, short paragraph of text.",
  config: {
    temperature: 0,
    topK: 1,
    topP: 0,
    seed: 42,
  },
});

if (!response.text) {
  throw new Error("No text generated by the model.");
}
console.log(`Generated text:\n${response.text}`);

const fingerprint = await sha256(response.text);
console.log(`Fingerprint for model ${geminiModel}: ${fingerprint}`);

await writeJsonProperty(FINGERPRINT_FILE, geminiModel, fingerprint);
